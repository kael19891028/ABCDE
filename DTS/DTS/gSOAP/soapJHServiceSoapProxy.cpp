/* soapJHServiceSoapProxy.cpp
   Generated by gSOAP 2.8.51 for JHService.h

gSOAP XML Web services tools
Copyright (C) 2000-2017, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapJHServiceSoapProxy.h"

JHServiceSoapProxy::JHServiceSoapProxy() : soap(SOAP_IO_DEFAULT)
{	JHServiceSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

JHServiceSoapProxy::JHServiceSoapProxy(const JHServiceSoapProxy& rhs)
{	soap_copy_context(this, &rhs);
	this->soap_endpoint = rhs.soap_endpoint;
}

JHServiceSoapProxy::JHServiceSoapProxy(const struct soap &_soap) : soap(_soap)
{ }

JHServiceSoapProxy::JHServiceSoapProxy(const char *endpoint) : soap(SOAP_IO_DEFAULT)
{	JHServiceSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = endpoint;
}

JHServiceSoapProxy::JHServiceSoapProxy(soap_mode iomode) : soap(iomode)
{	JHServiceSoapProxy_init(iomode, iomode);
}

JHServiceSoapProxy::JHServiceSoapProxy(const char *endpoint, soap_mode iomode) : soap(iomode)
{	JHServiceSoapProxy_init(iomode, iomode);
	soap_endpoint = endpoint;
}

JHServiceSoapProxy::JHServiceSoapProxy(soap_mode imode, soap_mode omode) : soap(imode, omode)
{	JHServiceSoapProxy_init(imode, omode);
}

JHServiceSoapProxy::~JHServiceSoapProxy()
{
	this->destroy();
	}

void JHServiceSoapProxy::JHServiceSoapProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"tempuri", "http://tempuri.org/", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this, namespaces);
}

JHServiceSoapProxy *JHServiceSoapProxy::copy()
{	JHServiceSoapProxy *dup = SOAP_NEW_COPY(JHServiceSoapProxy(*(struct soap*)this));
	return dup;
}

JHServiceSoapProxy& JHServiceSoapProxy::operator=(const JHServiceSoapProxy& rhs)
{	soap_copy_context(this, &rhs);
	this->soap_endpoint = rhs.soap_endpoint;
	return *this;
}

void JHServiceSoapProxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void JHServiceSoapProxy::reset()
{	this->destroy();
	soap_done(this);
	soap_initialize(this);
	JHServiceSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void JHServiceSoapProxy::soap_noheader()
{	this->header = NULL;
}

::SOAP_ENV__Header *JHServiceSoapProxy::soap_header()
{	return this->header;
}

::SOAP_ENV__Fault *JHServiceSoapProxy::soap_fault()
{	return this->fault;
}

const char *JHServiceSoapProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *JHServiceSoapProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int JHServiceSoapProxy::soap_close_socket()
{	return soap_closesock(this);
}

int JHServiceSoapProxy::soap_force_close_socket()
{	return soap_force_closesock(this);
}

void JHServiceSoapProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void JHServiceSoapProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *JHServiceSoapProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int JHServiceSoapProxy::test(const char *endpoint, const char *soap_action, _tempuri__test *tempuri__test, _tempuri__testResponse &tempuri__testResponse)
{	struct soap *soap = this;
	struct __tempuri__test soap_tmp___tempuri__test;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.1.1.13:8001/JHService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/test";
	soap_tmp___tempuri__test.tempuri__test = tempuri__test;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tempuri__test(soap, &soap_tmp___tempuri__test);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__test(soap, &soap_tmp___tempuri__test, "-tempuri:test", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__test(soap, &soap_tmp___tempuri__test, "-tempuri:test", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tempuri__testResponse*>(&tempuri__testResponse)) // NULL ref?
		return soap_closesock(soap);
	tempuri__testResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__testResponse.soap_get(soap, "tempuri:testResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int JHServiceSoapProxy::ToolingTimes(const char *endpoint, const char *soap_action, _tempuri__ToolingTimes *tempuri__ToolingTimes, _tempuri__ToolingTimesResponse &tempuri__ToolingTimesResponse)
{	struct soap *soap = this;
	struct __tempuri__ToolingTimes soap_tmp___tempuri__ToolingTimes;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.1.1.13:8001/JHService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/ToolingTimes";
	soap_tmp___tempuri__ToolingTimes.tempuri__ToolingTimes = tempuri__ToolingTimes;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tempuri__ToolingTimes(soap, &soap_tmp___tempuri__ToolingTimes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__ToolingTimes(soap, &soap_tmp___tempuri__ToolingTimes, "-tempuri:ToolingTimes", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__ToolingTimes(soap, &soap_tmp___tempuri__ToolingTimes, "-tempuri:ToolingTimes", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tempuri__ToolingTimesResponse*>(&tempuri__ToolingTimesResponse)) // NULL ref?
		return soap_closesock(soap);
	tempuri__ToolingTimesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__ToolingTimesResponse.soap_get(soap, "tempuri:ToolingTimesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int JHServiceSoapProxy::BillState(const char *endpoint, const char *soap_action, _tempuri__BillState *tempuri__BillState, _tempuri__BillStateResponse &tempuri__BillStateResponse)
{	struct soap *soap = this;
	struct __tempuri__BillState soap_tmp___tempuri__BillState;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.1.1.13:8001/JHService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/BillState";
	soap_tmp___tempuri__BillState.tempuri__BillState = tempuri__BillState;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tempuri__BillState(soap, &soap_tmp___tempuri__BillState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__BillState(soap, &soap_tmp___tempuri__BillState, "-tempuri:BillState", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__BillState(soap, &soap_tmp___tempuri__BillState, "-tempuri:BillState", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tempuri__BillStateResponse*>(&tempuri__BillStateResponse)) // NULL ref?
		return soap_closesock(soap);
	tempuri__BillStateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__BillStateResponse.soap_get(soap, "tempuri:BillStateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int JHServiceSoapProxy::LineInventory(const char *endpoint, const char *soap_action, _tempuri__LineInventory *tempuri__LineInventory, _tempuri__LineInventoryResponse &tempuri__LineInventoryResponse)
{	struct soap *soap = this;
	struct __tempuri__LineInventory soap_tmp___tempuri__LineInventory;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.1.1.13:8001/JHService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/LineInventory";
	soap_tmp___tempuri__LineInventory.tempuri__LineInventory = tempuri__LineInventory;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tempuri__LineInventory(soap, &soap_tmp___tempuri__LineInventory);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__LineInventory(soap, &soap_tmp___tempuri__LineInventory, "-tempuri:LineInventory", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__LineInventory(soap, &soap_tmp___tempuri__LineInventory, "-tempuri:LineInventory", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tempuri__LineInventoryResponse*>(&tempuri__LineInventoryResponse)) // NULL ref?
		return soap_closesock(soap);
	tempuri__LineInventoryResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__LineInventoryResponse.soap_get(soap, "tempuri:LineInventoryResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int JHServiceSoapProxy::AnDonStart(const char *endpoint, const char *soap_action, _tempuri__AnDonStart *tempuri__AnDonStart, _tempuri__AnDonStartResponse &tempuri__AnDonStartResponse)
{	struct soap *soap = this;
	struct __tempuri__AnDonStart soap_tmp___tempuri__AnDonStart;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.1.1.13:8001/JHService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/AnDonStart";
	soap_tmp___tempuri__AnDonStart.tempuri__AnDonStart = tempuri__AnDonStart;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tempuri__AnDonStart(soap, &soap_tmp___tempuri__AnDonStart);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__AnDonStart(soap, &soap_tmp___tempuri__AnDonStart, "-tempuri:AnDonStart", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__AnDonStart(soap, &soap_tmp___tempuri__AnDonStart, "-tempuri:AnDonStart", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tempuri__AnDonStartResponse*>(&tempuri__AnDonStartResponse)) // NULL ref?
		return soap_closesock(soap);
	tempuri__AnDonStartResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__AnDonStartResponse.soap_get(soap, "tempuri:AnDonStartResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int JHServiceSoapProxy::AnDonList(const char *endpoint, const char *soap_action, _tempuri__AnDonList *tempuri__AnDonList, _tempuri__AnDonListResponse &tempuri__AnDonListResponse)
{	struct soap *soap = this;
	struct __tempuri__AnDonList soap_tmp___tempuri__AnDonList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.1.1.13:8001/JHService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/AnDonList";
	soap_tmp___tempuri__AnDonList.tempuri__AnDonList = tempuri__AnDonList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tempuri__AnDonList(soap, &soap_tmp___tempuri__AnDonList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__AnDonList(soap, &soap_tmp___tempuri__AnDonList, "-tempuri:AnDonList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__AnDonList(soap, &soap_tmp___tempuri__AnDonList, "-tempuri:AnDonList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tempuri__AnDonListResponse*>(&tempuri__AnDonListResponse)) // NULL ref?
		return soap_closesock(soap);
	tempuri__AnDonListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__AnDonListResponse.soap_get(soap, "tempuri:AnDonListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int JHServiceSoapProxy::AnDonOver(const char *endpoint, const char *soap_action, _tempuri__AnDonOver *tempuri__AnDonOver, _tempuri__AnDonOverResponse &tempuri__AnDonOverResponse)
{	struct soap *soap = this;
	struct __tempuri__AnDonOver soap_tmp___tempuri__AnDonOver;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.1.1.13:8001/JHService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/AnDonOver";
	soap_tmp___tempuri__AnDonOver.tempuri__AnDonOver = tempuri__AnDonOver;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tempuri__AnDonOver(soap, &soap_tmp___tempuri__AnDonOver);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__AnDonOver(soap, &soap_tmp___tempuri__AnDonOver, "-tempuri:AnDonOver", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__AnDonOver(soap, &soap_tmp___tempuri__AnDonOver, "-tempuri:AnDonOver", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tempuri__AnDonOverResponse*>(&tempuri__AnDonOverResponse)) // NULL ref?
		return soap_closesock(soap);
	tempuri__AnDonOverResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__AnDonOverResponse.soap_get(soap, "tempuri:AnDonOverResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int JHServiceSoapProxy::DocAdd(const char *endpoint, const char *soap_action, _tempuri__DocAdd *tempuri__DocAdd, _tempuri__DocAddResponse &tempuri__DocAddResponse)
{	struct soap *soap = this;
	struct __tempuri__DocAdd soap_tmp___tempuri__DocAdd;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.1.1.13:8001/JHService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/DocAdd";
	soap_tmp___tempuri__DocAdd.tempuri__DocAdd = tempuri__DocAdd;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tempuri__DocAdd(soap, &soap_tmp___tempuri__DocAdd);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__DocAdd(soap, &soap_tmp___tempuri__DocAdd, "-tempuri:DocAdd", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__DocAdd(soap, &soap_tmp___tempuri__DocAdd, "-tempuri:DocAdd", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tempuri__DocAddResponse*>(&tempuri__DocAddResponse)) // NULL ref?
		return soap_closesock(soap);
	tempuri__DocAddResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__DocAddResponse.soap_get(soap, "tempuri:DocAddResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int JHServiceSoapProxy::test_(const char *endpoint, const char *soap_action, _tempuri__test *tempuri__test, _tempuri__testResponse &tempuri__testResponse)
{	struct soap *soap = this;
	struct __tempuri__test_ soap_tmp___tempuri__test_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.1.1.13:8001/JHService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/test";
	soap_tmp___tempuri__test_.tempuri__test = tempuri__test;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tempuri__test_(soap, &soap_tmp___tempuri__test_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__test_(soap, &soap_tmp___tempuri__test_, "-tempuri:test", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__test_(soap, &soap_tmp___tempuri__test_, "-tempuri:test", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tempuri__testResponse*>(&tempuri__testResponse)) // NULL ref?
		return soap_closesock(soap);
	tempuri__testResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__testResponse.soap_get(soap, "tempuri:testResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int JHServiceSoapProxy::ToolingTimes_(const char *endpoint, const char *soap_action, _tempuri__ToolingTimes *tempuri__ToolingTimes, _tempuri__ToolingTimesResponse &tempuri__ToolingTimesResponse)
{	struct soap *soap = this;
	struct __tempuri__ToolingTimes_ soap_tmp___tempuri__ToolingTimes_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.1.1.13:8001/JHService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/ToolingTimes";
	soap_tmp___tempuri__ToolingTimes_.tempuri__ToolingTimes = tempuri__ToolingTimes;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tempuri__ToolingTimes_(soap, &soap_tmp___tempuri__ToolingTimes_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__ToolingTimes_(soap, &soap_tmp___tempuri__ToolingTimes_, "-tempuri:ToolingTimes", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__ToolingTimes_(soap, &soap_tmp___tempuri__ToolingTimes_, "-tempuri:ToolingTimes", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tempuri__ToolingTimesResponse*>(&tempuri__ToolingTimesResponse)) // NULL ref?
		return soap_closesock(soap);
	tempuri__ToolingTimesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__ToolingTimesResponse.soap_get(soap, "tempuri:ToolingTimesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int JHServiceSoapProxy::BillState_(const char *endpoint, const char *soap_action, _tempuri__BillState *tempuri__BillState, _tempuri__BillStateResponse &tempuri__BillStateResponse)
{	struct soap *soap = this;
	struct __tempuri__BillState_ soap_tmp___tempuri__BillState_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.1.1.13:8001/JHService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/BillState";
	soap_tmp___tempuri__BillState_.tempuri__BillState = tempuri__BillState;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tempuri__BillState_(soap, &soap_tmp___tempuri__BillState_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__BillState_(soap, &soap_tmp___tempuri__BillState_, "-tempuri:BillState", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__BillState_(soap, &soap_tmp___tempuri__BillState_, "-tempuri:BillState", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tempuri__BillStateResponse*>(&tempuri__BillStateResponse)) // NULL ref?
		return soap_closesock(soap);
	tempuri__BillStateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__BillStateResponse.soap_get(soap, "tempuri:BillStateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int JHServiceSoapProxy::LineInventory_(const char *endpoint, const char *soap_action, _tempuri__LineInventory *tempuri__LineInventory, _tempuri__LineInventoryResponse &tempuri__LineInventoryResponse)
{	struct soap *soap = this;
	struct __tempuri__LineInventory_ soap_tmp___tempuri__LineInventory_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.1.1.13:8001/JHService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/LineInventory";
	soap_tmp___tempuri__LineInventory_.tempuri__LineInventory = tempuri__LineInventory;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tempuri__LineInventory_(soap, &soap_tmp___tempuri__LineInventory_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__LineInventory_(soap, &soap_tmp___tempuri__LineInventory_, "-tempuri:LineInventory", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__LineInventory_(soap, &soap_tmp___tempuri__LineInventory_, "-tempuri:LineInventory", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tempuri__LineInventoryResponse*>(&tempuri__LineInventoryResponse)) // NULL ref?
		return soap_closesock(soap);
	tempuri__LineInventoryResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__LineInventoryResponse.soap_get(soap, "tempuri:LineInventoryResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int JHServiceSoapProxy::AnDonStart_(const char *endpoint, const char *soap_action, _tempuri__AnDonStart *tempuri__AnDonStart, _tempuri__AnDonStartResponse &tempuri__AnDonStartResponse)
{	struct soap *soap = this;
	struct __tempuri__AnDonStart_ soap_tmp___tempuri__AnDonStart_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.1.1.13:8001/JHService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/AnDonStart";
	soap_tmp___tempuri__AnDonStart_.tempuri__AnDonStart = tempuri__AnDonStart;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tempuri__AnDonStart_(soap, &soap_tmp___tempuri__AnDonStart_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__AnDonStart_(soap, &soap_tmp___tempuri__AnDonStart_, "-tempuri:AnDonStart", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__AnDonStart_(soap, &soap_tmp___tempuri__AnDonStart_, "-tempuri:AnDonStart", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tempuri__AnDonStartResponse*>(&tempuri__AnDonStartResponse)) // NULL ref?
		return soap_closesock(soap);
	tempuri__AnDonStartResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__AnDonStartResponse.soap_get(soap, "tempuri:AnDonStartResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int JHServiceSoapProxy::AnDonList_(const char *endpoint, const char *soap_action, _tempuri__AnDonList *tempuri__AnDonList, _tempuri__AnDonListResponse &tempuri__AnDonListResponse)
{	struct soap *soap = this;
	struct __tempuri__AnDonList_ soap_tmp___tempuri__AnDonList_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.1.1.13:8001/JHService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/AnDonList";
	soap_tmp___tempuri__AnDonList_.tempuri__AnDonList = tempuri__AnDonList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tempuri__AnDonList_(soap, &soap_tmp___tempuri__AnDonList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__AnDonList_(soap, &soap_tmp___tempuri__AnDonList_, "-tempuri:AnDonList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__AnDonList_(soap, &soap_tmp___tempuri__AnDonList_, "-tempuri:AnDonList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tempuri__AnDonListResponse*>(&tempuri__AnDonListResponse)) // NULL ref?
		return soap_closesock(soap);
	tempuri__AnDonListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__AnDonListResponse.soap_get(soap, "tempuri:AnDonListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int JHServiceSoapProxy::AnDonOver_(const char *endpoint, const char *soap_action, _tempuri__AnDonOver *tempuri__AnDonOver, _tempuri__AnDonOverResponse &tempuri__AnDonOverResponse)
{	struct soap *soap = this;
	struct __tempuri__AnDonOver_ soap_tmp___tempuri__AnDonOver_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.1.1.13:8001/JHService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/AnDonOver";
	soap_tmp___tempuri__AnDonOver_.tempuri__AnDonOver = tempuri__AnDonOver;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tempuri__AnDonOver_(soap, &soap_tmp___tempuri__AnDonOver_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__AnDonOver_(soap, &soap_tmp___tempuri__AnDonOver_, "-tempuri:AnDonOver", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__AnDonOver_(soap, &soap_tmp___tempuri__AnDonOver_, "-tempuri:AnDonOver", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tempuri__AnDonOverResponse*>(&tempuri__AnDonOverResponse)) // NULL ref?
		return soap_closesock(soap);
	tempuri__AnDonOverResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__AnDonOverResponse.soap_get(soap, "tempuri:AnDonOverResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int JHServiceSoapProxy::DocAdd_(const char *endpoint, const char *soap_action, _tempuri__DocAdd *tempuri__DocAdd, _tempuri__DocAddResponse &tempuri__DocAddResponse)
{	struct soap *soap = this;
	struct __tempuri__DocAdd_ soap_tmp___tempuri__DocAdd_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.1.1.13:8001/JHService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/DocAdd";
	soap_tmp___tempuri__DocAdd_.tempuri__DocAdd = tempuri__DocAdd;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tempuri__DocAdd_(soap, &soap_tmp___tempuri__DocAdd_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__DocAdd_(soap, &soap_tmp___tempuri__DocAdd_, "-tempuri:DocAdd", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__DocAdd_(soap, &soap_tmp___tempuri__DocAdd_, "-tempuri:DocAdd", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tempuri__DocAddResponse*>(&tempuri__DocAddResponse)) // NULL ref?
		return soap_closesock(soap);
	tempuri__DocAddResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__DocAddResponse.soap_get(soap, "tempuri:DocAddResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
